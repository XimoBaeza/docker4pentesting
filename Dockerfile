FROM debian:testing as baseline

LABEL mantainer="XimoBaeza"

########################################
#	BASE SOFTWARE INSTALLATION
########################################

# Install packages from oficial repos
RUN     apt update && \
        DEBIAN_FRONTEND=noninteractive && \
        apt install -y  apt-utils vim zsh curl git sudo tmux procps openvpn squid iputils-ping netcat-openbsd socat nano \
	locate python3 python3-dev python3-pip unzip wget gcc libc-dev libxslt-dev openjdk-11-jre openjdk-11-jdk \
	autoconf automake libtool apt-utils build-essential host ftp telnet jq cifs-utils htop p7zip-full tree rlwrap nmap neovim grc

#################
# Create user
#################
RUN     useradd User_X -G sudo -s /bin/zsh && \
        passwd -d User_X && \
	mkdir /home/User_X && \
        chown -R User_X:User_X /home/User_X

###################################
# Install oh-my-zsh & plugins
###################################

USER 	User_X
RUN     sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended   && \
	git clone --depth 1 https://github.com/zsh-users/zsh-autosuggestions /home/User_X/.oh-my-zsh/custom/plugins/zsh-autosuggestions && \
	git clone --depth 1 https://github.com/zsh-users/zsh-syntax-highlighting.git /home/User_X/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting && \

#############################
# Install powerlevel10k
#############################

	git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

##########################
# Install oh-my-tmux
##########################

WORKDIR /home/User_X
RUN 	git clone https://github.com/gpakosz/.tmux.git && \
	ln -s -f .tmux/.tmux.conf && \
	cp .tmux/.tmux.conf.local . && \

######################
# Install fzf
######################

 	git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && \
	~/.fzf/install --key-bindings --completion --update-rc && \

################################################
# Install lsd & bat (Use catn for normal cat)
################################################

	wget https://github.com/Peltoche/lsd/releases/download/0.20.1/lsd_0.20.1_amd64.deb && \
	sudo dpkg -i lsd_0.20.1_amd64.deb && \
	wget https://github.com/sharkdp/bat/releases/download/v0.18.2/bat_0.18.2_amd64.deb && \
	sudo dpkg -i bat_0.18.2_amd64.deb && \
	rm -rf *.deb && \

#############################
# Install vivid ls_colors
#############################

	wget "https://github.com/sharkdp/vivid/releases/download/v0.7.0/vivid_0.7.0_amd64.deb" && \
	sudo dpkg -i vivid_0.7.0_amd64.deb && \
	rm -rf vivid_0.7.0_amd64.deb 

##########################################
# Add dotfiles and configure locales
##########################################

ADD 	dotfiles/ /home/User_X/
RUN 	sudo mv grc.zsh /etc/grc.zsh && \
	sed -i '78i autoload -U compinit && compinit' /home/User_X/.zshrc && \
	sed -i '1i export LC_CTYPE="C.UTF-8"' /home/User_X/.zshrc && \
        sed -i '2i export LC_ALL="C.UTF-8"' /home/User_X/.zshrc && \
        sed -i '3i export LANG="C.UTF-8"' /home/User_X/.zshrc && \
        sed -i '3i export LANGUAGE="C.UTF-8"' /home/User_X/.zshrc

#################################
# Configure Squid Proxy
#################################

USER 	root
RUN	echo "http_access allow all" >> /etc/squid/squid.conf && \
      	sed -i 's/http_access deny all/#http_access deny all/g' /etc/squid/squid.conf && \
        chown -R User_X:User_X /home/User_X && \

##########################
# Install exploitation
##########################

 	mkdir -p /tools/exploitation && \
	cd /tools/exploitation && \
	# Crackmapexec
	apt install -y libffi-dev python-dev php libapache2-mod-php ruby ruby-dev python3-venv && \
        gem install gpp-decrypt addressable && \
	python3 -m pip install pipx && \
        pipx ensurepath && \
        pipx install crackmapexec && \
	echo "alias cme='sudo /root/.local/bin/cme'" >> /home/User_X/.zshrc && \
	# Impacket
	git clone https://github.com/SecureAuthCorp/impacket && \
	cd impacket && \
	python3 -m pip install . && \
	# Metasploit
	curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall && \
  	chmod 755 msfinstall && \
  	./msfinstall && \
	# Searchsploit
	cd /tools/exploitation && \
	git clone https://github.com/offensive-security/exploitdb.git && \
	sudo ln -sf /tools/exploitation/exploitdb/searchsploit /usr/local/bin/searchsploit && \
	# Nishang
	git clone https://github.com/samratashok/nishang.git && \
	# Evil-winrm
	gem install evil-winrm && \

###########################
# Install Escalation
###########################

	mkdir -p /tools/escalation && \
	cd /tools/escalation && \
	# Linux Smart Enumeration
	git clone https://github.com/diego-treitos/linux-smart-enumeration && \
	# htbenum
	git clone --depth 1 https://github.com/SolomonSklash/htbenum.git && \
	cd htbenum && \
	chmod +x htbenum.sh && \
        ./htbenum.sh -u && \
	cd /tools/escalation && \
	# htbexplorer
	git clone https://github.com/s4vitar/htbExplorer.git && \
    	# linux/enum4linux
        git clone --depth 1 https://github.com/portcullislabs/enum4linux.git && \
    	# linux/linenum
        wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh && \
	# linux/linPEAS
        wget https://raw.githubusercontent.com/carlospolop/privilege-escalation-awesome-scripts-suite/master/linPEAS/linpeas.sh && \
	# pspy
        wget https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy32 && \
        wget https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy64 && \
        chmod +x pspy* && \
	# WinPEAS
	wget https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/Obfuscated%20Releases/winPEASany.exe && \
	wget https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/Obfuscated%20Releases/winPEASx64.exe && \
	wget https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/Obfuscated%20Releases/winPEASx86.exe && \	
	apt install -y smbmap && \
	# Windows Exploit Suggester
	git clone https://github.com/AonCyberLabs/Windows-Exploit-Suggester.git && \

#############################
# Password Cracking
#############################

	mkdir -p /tools/password_cracking && \
	cd /tools/password_cracking && \
	# Hashcat
	git clone https://github.com/hashcat/hashcat.git && \
	cd hashcat && \
	make && \
	make install && \
	# Hashid
	apt install -y hashid && \
	# John the ripper
	apt install -y libssl-dev && \
	cd /tools/password_cracking && \
	git clone --depth 1 https://github.com/magnumripper/JohnTheRipper -b bleeding-jumbo john && \
        cd /tools/password_cracking/john/src && \
        ./configure && make -s clean && make -sj4 && \
	# cewl crunch hydra patator
	apt install -y cewl crunch hydra patator && \
	# Responer
	cd /tools/password_cracking && \
	git clone https://github.com/lgandx/Responder.git && \

################################
# Forensic & stego
################################

	# Exiftool
	apt install -y libimage-exiftool-perl \
	# Steghide
	steghide
	# binwalk
	#binwalk 
	# Foremost
	#foremost

####################
# Install go
####################

WORKDIR /tmp
RUN     wget -q https://golang.org/dl/go1.16.6.linux-amd64.tar.gz -O go.tar.gz && \
        tar -C /usr/local -xzf go.tar.gz && \
	rm go.tar.gz

ENV 	GOROOT "/usr/local/go"
ENV 	GOPATH "/home/User_X/go"
ENV 	PATH "$PATH:$GOPATH/bin:$GOROOT/bin"

	
##########################
# Install Web
##########################

RUN 	mkdir -p /tools/web && \
	cd /tools/web && \ 
	# ffuf
        go get github.com/ffuf/ffuf && \
	# gobuster
        go get github.com/OJ/gobuster && \
	# sqlmap
        git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap && \
	# whatweb
	git clone --depth 1 https://github.com/urbanadventurer/WhatWeb.git && \
	# wfuzz
	apt install -y wfuzz && \
	# wpscan
	gem install wpscan && \

##########################
# Wordlists
##########################
	
	mkdir -p /tools/wordlists && \
	cd /tools/wordlists && \
	# SecLists
        git clone --depth 1 https://github.com/danielmiessler/SecLists.git && \
	# rockyou
        curl -L -o rockyou.txt https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt && \
	
#########################
# Remove apt cache
#########################

        apt-get clean autoclean && \
        apt-get autoremove --yes && \
        rm -rf /var/lib/{apt,dpkg,cache,log}/ 

USER 	User_X
WORKDIR /home/User_X
ENTRYPOINT /bin/zsh
